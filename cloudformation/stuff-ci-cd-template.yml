---
Parameters:
  GitHubOAuthToken:
    Type: String
    NoEcho: true
  GitHubOwner:
    Type: String
    Default: johannfazakas
  GitHubRepo:
    Type: String
    Default: stuff-web-app
  GitHubBranch:
    Type: String
    Default: main

Resources:
  WebAppCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: stuff-web-app-code-build
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        ComputeType: BUILD_GENERAL1_SMALL
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Ref WebAppCodeBuildRole

  WebAppCodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: stuff-web-app-code-deploy-application
      ComputePlatform: Server

  WebAppCodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      DeploymentGroupName: stuff-web-app-code-deploy-deployment-group
      ApplicationName: !Ref WebAppCodeDeployApplication
      ServiceRoleArn: !GetAtt
        - WebAppCodeDeployRole
        - Arn
      AutoScalingGroups:
        - stuff-web-app-auto-scaling-group
#      Ec2TagFilters:
#        - Key: service
#          Value: stuff-web-app
#          Type: KEY_AND_VALUE

  WebAppCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: stuff-web-app-code-pipeline
      ArtifactStore:
        Type: S3
        Location: stuff-artifacts-bucket
      RoleArn: !GetAtt
        - WebAppCodePipelineRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: source
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref WebAppCodeBuild
              InputArtifacts:
                - Name: source
              OutputArtifacts:
                - Name: build
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: 1
              Configuration:
                ApplicationName: !Ref WebAppCodeDeployApplication
                DeploymentGroupName: !Ref WebAppCodeDeployDeploymentGroup
              InputArtifacts:
                - Name: build

  GitHubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: true
      TargetPipeline: !Ref WebAppCodePipeline
      TargetPipelineVersion: !GetAtt WebAppCodePipeline.Version
      TargetAction: Source
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}

  WebAppCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: stuff-code-build-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - s3:*
                Resource: arn:aws:s3:::stuff-artifacts-bucket/*

  WebAppCodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  WebAppCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployDeployerAccess
      Policies:
        - PolicyName: stuff-web-app-pipeline-upload-artifacts-s3-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource: arn:aws:s3:::stuff-artifacts-bucket/*
