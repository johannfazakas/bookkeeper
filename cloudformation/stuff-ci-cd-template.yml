---
Resources:
  WebAppCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: stuff-web-app-code-build
      Source:
        Type: GITHUB
        Location: https://github.com/johannfazakas/stuff-web-app
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        ComputeType: BUILD_GENERAL1_SMALL
      Artifacts:
        Type: S3
#        TODO(Johann) s3 bucket could be extracted as a nested stack to depend on
        Location: stuff-artifacts-bucket
        Name: stuff-web-app
        Path: stuff-artifacts
      ServiceRole: !Ref WebAppCodeBuildRole

  WebAppCodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: stuff-web-app-code-deploy-application
      ComputePlatform: Server

  WebAppCodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      DeploymentGroupName: stuff-web-app-code-deploy-deployment-group
      ApplicationName: stuff-web-app-code-deploy-application
      ServiceRoleArn: !GetAtt
        - WebAppCodeDeployRole
        - Arn

  WebAppCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: stuff-code-build-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
#                  TODO(Johann) check if quotes are required
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - s3:PutObject
#                TODO(Johann) resource should be specified here. but I should add the bucket to an nested stack first
                Resource: '*'

  WebAppCodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'codedeploy.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
